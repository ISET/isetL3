%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.24.3 (http://poppler.freedesktop.org)
%%Creator: MATLAB, The MathWorks, Inc. Version 8.2.0.701 (R2013b). Operating System: Linux 3.10.27-200.rt25.1.fc20.ccrma.x86_64.rt #1 SMP PREEMPT RT Thu Jan 30 13:25:00 PST 2014 x86_64.
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 499 300
%%HiResBoundingBox: 0 0 499 300
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  2 array astore
  /setpagedevice where {
    pop 2 dict begin
      /PageSize exch def
      /ImagingBBox null def
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font RYRLBK+Helvetica-Bold
%!FontType1-1.0: RYRLBK+Helvetica-Bold
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(URW\)++,Copyright 1999 by \(URW\)++ Design & Develo\
pment; Cyrillic glyphs added by Valek Filippov \(C\) 2001-2005) readonly def
/FullName (Nimbus Sans L Bold) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /RYRLBK+Helvetica-Bold def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 824 741] readonly def
/StrokeWidth 0 def
/UniqueID 5020904 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 45 /minus put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 57 /nine put
dup 65 /A put
dup 67 /C put
dup 80 /P put
dup 101 /e put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F81ADB02AFF24E5D868D68195CD5C0705234B24901D6BCBC0562D42
D219CCE983539A0837FC73619E1137448AB941192FDE2CD88CA764A5426E0302
20E599EF0B83626EDADC59CD0D87571D7BCD4E00EB3E83C5407FD0487834869B
9530AB2054F80B5C0D5A76038E3D8ACE1C6F0E0D07BAD6D12D4E9780E9DD0465
C1DAEA852EADFB7DE54EF2207CC9DE689B66AC4A69453058FC140BA4F474FE89
321EAF3593A5F1F8A76A7F0780DBE729B34C12CD2DEA96270BD2756D858CFD23
1F468994F4A5BA662CD858819E4ECF97F4255606B18939FD5C3CB7DEC7CFE47E
6FC57468B5428E0FDE4FC2C2766E334627374D00BE473E99E31233D4C9CA1440
1595872D715AEF596D0C266754A069E17A3BA6E3F15CC19797BB93F59D52DD15
B9116B86EB6DF5D9747CD734E0DAC3B7D5E155F504561FA0D232D481693D5AEA
0CC4211F7BD72CCD75238A88C726F9959068C37A3FB60AA7EF3CAD40CA7812C4
55968CCEAFB86FE8C4DF3F2B781B472C3817E0C883A57B3C99416E476AB29DB4
F26A79EB788E45DB1B0E4A7712CB5AD597ED825D0487DAC6EC4C0413FD23D0D5
60B79A0D6083A2CAC8D030072279B031C3C2C7424171FE8420F191B9857EDFC0
4B7BCBC6305E9CB9D83B32C862CD365F8815C50ADDD21ABEC2B083C262BEE517
089D1C6A68B419667FEBBDB81DD769EED8AA11E66476764FD88523A38AB3D857
40881F94C6D346CC7ECF51918F22C56DA7D15FB7EAB277EB9AA9C64F2EB2C6B0
0CDBF4191379D5CC1C57CC4B56E201755BB462171C90610F3CB679F583474C9E
A50F0A92609A54B12481DE0D3281EDBF352CDBD75F239DF48F0B8E44C86F2E03
668B9AACF743AD628B0E9B3601B5C2FD71376B5BF9247EE062B861C8513BEDDC
40F996A0A98B9A525A7EF0EAEB3732A01FF940E6896854546B5B3122C6798719
8333F28E5C44435843EB896852FFFC31344C248F329FC716E474ACB9334990C3
11004FCC1C5601F72CF645EF493EF59512F9C6AE002310C8D10B965305891216
6F2D8262AA0760EDAFA666D408CBE876F87335043C42013827D8177003E2738F
3415285C9BE872367E04C040CED76EBB9BDEA34614A71C4A01C82DF9714657AA
746A941B53DC00578F588FC711A7958C7776A9FF3B3EC6BF99050077DE386515
126D7E1BBAC096ED4DC2F2ADA20349443E77398CCEE8A059EF26B7DDE9DCBF7B
C4A384ADA7DD10FF9CEA82CBE67C97C84A8883A260336DD805311045DA6729C7
C3B8C93CFB931325CBA34AB047424843D27856F646F585A4C6297748ADED6C0C
E527FCA03B5908A1485DEBF9857470E3746F8D561C116E19EC37F1729C5DE051
17BB16B37FA2EC30EA4D8B6A7351F571E4AE100FA545046936F3B3F2C2C7E61D
D255AFD58C6A9ECD173B66D00F955FF6F6A648F3310EBD434F9CFDC573355312
D2BE54CAA656D61ABBA928DF05B0246510C66BA3EB59501004024D2DDE4DDE14
7BCCFB0A1B8E0A0986ADCA006D1595E5AB51E11AF842DDBAE1F7B54113F4419A
6EF5B4884CC6C121F09706CB3BE59C7712DE0FA22E3E73A8C811C11F8369DA9D
9AA36A7DBAB31285350E25FE196854C00BCF1653D944FF0C05D72B6BFF3D4E54
F4D3DB6B996A34555FB44ACF90BD8A94FE3E31B2B67A6CB3851575B41FE589BC
B3B2D446359F9DE5A8AEB2B88F61FCB86DD6A005F14246A42BDD72442251A304
65EDEC19616918429B4FF8C3E8EF27BBF7D9439803B591FB5484EBB590325137
A0CB1E61C3D7452CB9CE873DBF97F2BF486825F9CD78FCCB6616C0852DF228ED
AC17971D6A6C818F1D8B26A98B132F1FE0C45A4C3E46C3DFA4CD78252303E1D0
70FD7BBF6329C58E6B9A1623C51F1E36DB2CAFECC69D4D14BFDC6852D28FA54B
1E41913836A94A917934C01A0936B1CC9395EC561F278AD90CFFEC07BE630FF8
A51A0681065AE29D920105DB05E4FA27EA69ACAF59C6430BB0026ACA854A7B94
2A5380AF964D56A01E547418F91774E0B65499A158FD1FA5694BDED5A218D0C7
95E6D345DEEFF8CF809CEF0703E572F1A1B17C3228CAB6CD8FD3B706BD94EB48
EF8990267B52192504D0E43F6AFC3A5B547A9E764C0C25F17BAC500C9A4487AF
4182699B8B5C9FB2FEC4D13E7FE522F498B0860ACB0FD6119B724695409EB490
15F44C12F3DB33F264EED392BCCBA0DA9EAAE58FDADC9EAC52464340132FD783
E3A9DF72BDA9DE69AB8DA3B3FFDC364A1ECFC1B16D2413B1B6F70D6632050597
DEAF0A2A6786723ADDB21262F39DB3599FE5AF599F1187BD9E68F4E097193CB8
740F6381DDB668761FF26AB44A08D49E760142318B1C937EA1E95AFA9FA48E76
512D883C161484A08427515FAFDAB1A65BEEBD79805C749A43E986920AD4BBD1
ACD7556FE8D5575AF5A70AB9B03D362847F91F265800AFC4F4936704FEB204AF
118F93E914C844312B99F604FE25A5DE9353A357157A61E96A501C5083BAD529
DFC90E81FCD6C0340BB0048EB5EA6B1BE8C9B736F053BAF68B58495FD172727B
8F99D1D828FB0895AC0A61AF2538D23A51526A23A08EC8B3E8B4ABD8CEF5FD25
C1675756EA69D149B3536912A0BE46B8E484ED7EDB37973C3FCBD5337C068BEF
688E391C3956DE89B9B03F8D31378277A7C3C9404A7D6AAF5B6D7091C7544D70
BBB3F9493DA3FF6C1BF8DB290F773BE380C246DF0EAE305DCBCF32AD6CCEA659
21BF6E05A52FE0D2E206CD7AECBCDA3BA1FE4ED1FEB7D845451745C51A04AB4E
78FD5035CA7FA9A1436E23F5C2454147F86972575E2A929D4F990801EC322BDB
74968D917C7E390CFD776A4051CF1EA1BE6BD26A7170FCFB5A606F33F83B1417
708AE664DC29B77B017A2AC61A46852BDE57C3988FFA7CBDC12874628AE18F23
225E59949EB27C79B09A8D5514F8F8CF1925F6BC90E985723EE7F6BB9814EF6A
611847B7FCC1ECA9880DC56ABC31A8460E297D5CBAAB57ECFF8CC6205349774F
D1A03600DB2AA6538BB6D75F0400A9B7701726914DF965F81170FDF5A308DA00
4FEBF11248A58F33F44086302C628D14ED1917E40E8B48DB3C46322BA469F212
C84DD49768C5145D8034EEB71890A3F998
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /RYRLBK+Helvetica-Bold 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/minus/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 499 300 re
W
q
q
[0.1 0 0 0.1 0 0] cm
q
0 7 4990 2993 re
W
/DeviceGray {} cs
[1] sc
578.332 352.5 4339.17 2607.5 re
f*
5 w
1 j
/DeviceGray {} CS
[1] SC
578.332 352.5 4339.168 2607.5 re
S
[0 40] 0 d
3.33333 w
1 J
/DeviceGray {} CS
[0] SC
855 352.5 m
855 2960 l
S
855 2960 m
855 2960 l
S
1515.83 352.5 m
1515.83 2960 l
S
1515.83 2960 m
1515.83 2960 l
S
2177.5 352.5 m
2177.5 2960 l
S
2177.5 2960 m
2177.5 2960 l
S
2838.33 352.5 m
2838.33 2960 l
S
2838.33 2960 m
2838.33 2960 l
S
3500 352.5 m
3500 2960 l
S
3500 2960 m
3500 2960 l
S
4160.83 352.5 m
4160.83 2960 l
S
4160.83 2960 m
4160.83 2960 l
S
4822.5 352.5 m
4822.5 2960 l
S
4822.5 2960 m
4822.5 2960 l
S
578.332 489.168 m
4918.33 489.168 l
S
4918.33 489.168 m
4918.33 489.168 l
S
578.332 820 m
4918.33 820 l
S
4918.33 820 m
4918.33 820 l
S
578.332 1150.83 m
4918.33 1150.83 l
S
4918.33 1150.83 m
4918.33 1150.83 l
S
578.332 1481.67 m
4918.33 1481.67 l
S
4918.33 1481.67 m
4918.33 1481.67 l
S
578.332 1811.67 m
4918.33 1811.67 l
S
4918.33 1811.67 m
4918.33 1811.67 l
S
578.332 2142.5 m
4918.33 2142.5 l
S
4918.33 2142.5 m
4918.33 2142.5 l
S
578.332 2473.33 m
4918.33 2473.33 l
S
4918.33 2473.33 m
4918.33 2473.33 l
S
578.332 2804.17 m
4918.33 2804.17 l
S
4918.33 2804.17 m
4918.33 2804.17 l
S
[] 0 d
5 w
0 J
578.332 352.5 m
4917.5 352.5 l
S
578.332 352.5 m
578.332 2960 l
S
855 352.5 m
855 395.832 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 76.5 19.8332] Tm
0 0 Td
/F8_0 13 Tf
(0.9)
[7.228
0
3.614
0
7.228
0] Tj
Q
1515.83 352.5 m
1515.83 395.832 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 148 19.8332] Tm
0 0 Td
/F8_0 13 Tf
(1)
[7.228
0] Tj
Q
2177.5 352.5 m
2177.5 395.832 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 208.75 19.8332] Tm
0 0 Td
/F8_0 13 Tf
(1.1)
[7.228
0
3.614
0
7.228
0] Tj
Q
2838.33 352.5 m
2838.33 395.832 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 274.833 19.8332] Tm
0 0 Td
/F8_0 13 Tf
(1.2)
[7.228
0
3.614
0
7.228
0] Tj
Q
3500 352.5 m
3500 395.832 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 341 19.8332] Tm
0 0 Td
/F8_0 13 Tf
(1.3)
[7.228
0
3.614
0
7.228
0] Tj
Q
4160.83 352.5 m
4160.83 395.832 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 407.083 19.8332] Tm
0 0 Td
/F8_0 13 Tf
(1.4)
[7.228
0
3.614
0
7.228
0] Tj
Q
4822.5 352.5 m
4822.5 395.832 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 473.25 19.8332] Tm
0 0 Td
/F8_0 13 Tf
(1.5)
[7.228
0
3.614
0
7.228
0] Tj
Q
578.332 489.168 m
621.668 489.168 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 29.3332 43.9168] Tm
0 0 Td
/F8_0 13 Tf
(-0.1)
[7.592
0
7.228
0
3.614
0
7.228
0] Tj
Q
578.332 820 m
621.668 820 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 22.0832 77] Tm
0 0 Td
/F8_0 13 Tf
(-0.05)
[7.592
0
7.228
0
3.614
0
7.228
0
7.228
0] Tj
Q
578.332 1150.83 m
621.668 1150.83 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 47.75 110.083] Tm
0 0 Td
/F8_0 13 Tf
(0)
[7.228
0] Tj
Q
578.332 1481.67 m
621.668 1481.67 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 29.6668 143.167] Tm
0 0 Td
/F8_0 13 Tf
(0.05)
[7.228
0
3.614
0
7.228
0
7.228
0] Tj
Q
578.332 1811.67 m
621.668 1811.67 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 36.9168 176.167] Tm
0 0 Td
/F8_0 13 Tf
(0.1)
[7.228
0
3.614
0
7.228
0] Tj
Q
578.332 2142.5 m
621.668 2142.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 29.6668 209.25] Tm
0 0 Td
/F8_0 13 Tf
(0.15)
[7.228
0
3.614
0
7.228
0
7.228
0] Tj
Q
578.332 2473.33 m
621.668 2473.33 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 36.9168 242.333] Tm
0 0 Td
/F8_0 13 Tf
(0.2)
[7.228
0
3.614
0
7.228
0] Tj
Q
578.332 2804.17 m
621.668 2804.17 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 29.6668 275.417] Tm
0 0 Td
/F8_0 13 Tf
(0.25)
[7.228
0
3.614
0
7.228
0
7.228
0] Tj
Q
20 w
/DeviceRGB {} CS
[0 0 1] SC
3144.17 1240.83 m
3194.17 1190.83 l
S
3194.17 1240.83 m
3144.17 1190.83 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 217.667 5.75] Tm
0 0 Td
/F8_0 13 Tf
(PCA Component 1)
[8.671
0
9.386
0
9.386
0
3.614
0
9.386
0
7.943
0
11.557
0
7.943
0
7.943
0
7.943
0
7.228
0
7.943
0
4.329
0
3.614
0
7.228
0] Tj
[0 1 -1 0 14.5832 108.417] Tm
0 0 Td
/F8_0 13 Tf
(PCA Component 2)
[8.671
0
9.386
0
9.386
0
3.614
0
9.386
0
7.943
0
11.557
0
7.943
0
7.943
0
7.943
0
7.228
0
7.943
0
4.329
0
3.614
0
7.228
0] Tj
Q
0 j
/DeviceRGB {} CS
[0 0.5 0] SC
3602.5 1490.83 m
3642.5 1560 l
3562.5 1560 l
3602.5 1490.83 l
h
S
/DeviceRGB {} CS
[1 0 0] SC
4913.33 815 m
4948.33 860.832 l
4913.33 906.668 l
4878.33 860.832 l
4913.33 815 l
h
S
4917.5 797.5 m
4952.5 843.332 l
4917.5 889.168 l
4882.5 843.332 l
4917.5 797.5 l
h
S
4523.33 876.668 m
4558.33 922.5 l
4523.33 968.332 l
4488.33 922.5 l
4523.33 876.668 l
h
S
/DeviceRGB {} CS
[0 0.75 0.75] SC
550.832 2441.67 55 55 re
S
/DeviceRGB {} CS
[0.75 0 0.75] SC
1243.33 1506.67 m
1313.33 1506.67 l
S
1278.33 1541.67 m
1278.33 1471.67 l
S
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font RYRLBK+Helvetica-Bold
%%EOF
