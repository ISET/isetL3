%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.24.5 (http://poppler.freedesktop.org)
%%Creator: MATLAB, The Mathworks, Inc. Version 7.10.0.499 (R2010a). Operating System: Linux 3.13.0-24-generic #47-Ubuntu SMP Fri May 2 23:30:00 UTC 2014 x86_64.
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 402 339
%%HiResBoundingBox: 0 0 402 339
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  2 array astore
  /setpagedevice where {
    pop 2 dict begin
      /PageSize exch def
      /ImagingBBox null def
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font BIKHZR+Helvetica-Bold
%!FontType1-1.0: BIKHZR+Helvetica-Bold
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(URW\)++,Copyright 1999 by \(URW\)++ Design & Develo\
pment; Cyrillic glyphs added by Valek Filippov \(C\) 2001-2005) readonly def
/FullName (Nimbus Sans L Bold) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /BIKHZR+Helvetica-Bold def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [-22 -189 681 741] readonly def
/StrokeWidth 0 def
/UniqueID 5020904 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 45 /minus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 56 /eight put
dup 57 /nine put
dup 68 /D put
dup 73 /I put
dup 83 /S put
dup 84 /T put
dup 95 /underscore put
dup 110 /n put
dup 117 /u put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F81ADB02AFF24E5D868D68195CD5C0705234B24901D6BCBC0562D42
D219CCE983539A0837FC73619E1137448AB941192FDE2CD88CA764A5426E0302
20E599EF0B83626EDADC59CD0D87571D7BCD4E00EB3E83C5407FD0487834869B
9530AB2054F80B5C0D5A76038E3D8ACE1C6F0E0D07BAD6D12D4E9780E9DD0465
C1DAEA852EADFB7DE54EF17B03A6FE0D212786F38133C52D352872D18EEB24C0
77317AE8A4E48BA5AE5053EDF838A64930FB90215D6AA351E373C09862163602
E12B30429545966B13D1DD3FB6644A928D79E320800B4D51E146429ECF91359E
85377AB0140065EDF28F27C8688C47A45F6DC88F8BA38B32BA7B97F61BE2BA53
A45DD4634B75997FCB425FA6011C48F16030408A34C8CCAD0B48A59E0AD2085C
7C9D4FD748C9FD7B8D90BD8D82533875EB6DD51C2C939BDC6A42F5A47AB036E3
ADFAB3AA69E9DEF591A1533C44C3E978EC5EE2A6591E722BF441F2DF86BE1D14
24AA46F47BEB509918A6553415D277219DAF99A4DD0A618E25C6CCCCFDD765D7
76CADC459AE0A51B77A5265360EBA98F7F9448A74B6FDC39BF09415E0A73E223
42BB91B932CDADE71CD02150FAE0616106FB1CF6B95F8D53D5DA429818B6F959
200BC932BD24037CA7E08CE89170164F4131969E411A0C00BD8650763AE18FE9
A5C9279D546B7BECB4F0F8C63402B1D310D6E8467112C6D459707630D9D1DEE0
B97AECF3765443A03F5E40455E8CA96315BF821056F55DE99C6A6587FD51FDD6
2E907BB9D711E6D2BDB8218C3293903579B17F7BC69ED58ECC8EDDE46788BCA9
701335B685C2D9847700583210D202FC71AF2F5D603037E10CDCB3D00F2EF80B
9BA3D34FC7E71D19D7DD75AA3BCA0CD225597DA59FC27F825544E9604D4CB368
19C2FBB490EECE9A8614D320538BDEF582C264930BABA798BE6B0EAA878A82D6
8F3F2D912E00513329E2598A58DF474924E308E091761E5D524B597E5C283320
AB735D20AB567D2762F97083BAD9C31294B9C66CAF82C4C89A9B5ACC280F0112
634028C88A75E5EBB50C004ACB214FBBC4FACC098962F26B7B2147C8ED09D31C
D422EC3C67FA7ACD281FF5121F950EFDC093E109387D1731A28E95A399DF9A25
6BDB9F1BE4B92B221B9349077A1CBD5634153EEF20361A24B4DA6B32A10DAD40
151A2A25F0DD435D578DAAB288AA4D110AFA11C311924B94EBF80796A608F48F
B0764650AAA47E0174F14D95E1F4D62F11C09122ED6F37D45BEA025440EBE07B
9F1AF10617C99A20BFBC1BF7230372C8471D9ED41CF239DFD199EAC9C2A2B9AD
86C604EBB2AE3ECD497552923DA4A943BEF2A77EEE4ABD62688F98298434C7B1
D07FFF97F380B7F755BDF2627B290282A0AC847F8891D6686E23A791B03F16D3
FFEDAED5E4C1B4E38DF12A80D91F5BE19EA11DF49F42599333F4D105B2422E58
BCD572D681873CC5F4D9F34E85C22536338901752AAE0A082BCD7AC2A2A4DD88
7131A76226A03ABF061A619B90F80A1145A17C6667D735782BB9D693CF846B11
46FFC9D1CF861DC8A79C755049420A6BCD91EA123957CDA5324840E5FEFFC59D
98E8B9692F3240589605202D07825733156CCC3C2D65AF29C928C6C3284FCB99
1DF9E2A53C49C9C3D832D3028CB490978DE88215B52E08E1CECE68DCE1CC5C8E
9C2CCE2735D41956EF2F1D493253EF6DEFD011A0AA54CF538B1D6B5EE6359B68
714AF2188B2059B0705530C48F16AA13A8EE6F6EA81277D48D8D27D31B64196F
38A84365BC06480CF1826D7990072A37186674D3DEBE86B3DE3D550A88BC92FF
F1F08DD4F730D0CE31B5FD49C18A3B88B4AC87E06397EE4F15DCEF204529F03A
5E81820AF46D84DA8949596A7BD6865B5431B4837A39BABA95FE53479C141833
9210491F5BBED4A36770380BAE4B0E97A10E7CE91D5974A8B50288AD49E0804C
738446E0E11B307CADDC2C7A500912434490B2309F283D52D9E40F764B3D7A93
8145A2005886A45D0439739010CCA087086C4F7582DF56AA6F0ACD30C7787083
410E67F9EFBE535C66C818F4D5BD4366DB179488E888FD757FD9EB7FCEB67451
6DE4970A93FD6B8DD47A547A4E15AF6C8515CBC3C26C5774201B60A03D7206A4
98D7CAA04BF13D60B7FB848EE257FCAF01117C819E1123D39953BFC7CC555EE4
655EC3CE4D9F51E7FAF9837FF1126D89CEB305BC7625F9B932991E56A3C960AF
DF6A6929049C862FDAEEAD60E15FE3A73F3D6AFA4818DBF4BE70A639F00FA39C
940D6AFB0BF2A38E10E5ADE7B4D5B40339C2D359E9772EC5A942B0D390FDF58F
99B58088D9E984D36E96FA8A7738ED9EEB3EAFAC83463CB6BC6DC3272BF7AFEA
BD223B4A6DE8F564378D0B0804A7FA02F35B377C6E95E5DCFB08BF4E0C2C0FD2
843268A69CBBA879AE8D998FA88BD0419219BBFF35C01275BBA25331E6612FE2
060B721150580FA35C6644D89868CE66B191BA26918DEC905FB4D588CBBC3FA9
2E849409F1E162550363E672D868BC151A2397F4488DDC00254C180C4696F908
2DDA84090B020773E98DADE3EBCD6E6F495AB25B2FDE5EDD758A6F7EC0819B1C
9F8BD6BE25BFFB22985DEC063AF9090472C6954EC55201F4E5435A2E3BCFB7C8
76D5D767E8397A71004D0D25B2A3C5ECC650BE636A31F54A31F0746A88662C36
9E7720AA95FAFC632AAF31C7E265715C4FE6A2CBECBA0CB0D77E8DF4D98DF227
21B6F1FDA55FA516AE672BF56F3EF4EC6B9EF8CF17E83FED7572AFF49AE147BE
635A07B7B961F92EEE5C84A5EB0807C36E6385C45A14C3DAA68C197905709B2C
85FB775897B6ADACFF0D21997B2B975D97C36237A3E468707FC77EDB86356E6F
B17534E530097FB78D1ED714D0BF7C29DEEDA3441F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /BIKHZR+Helvetica-Bold 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/minus/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 402 339 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
461.668 432.5 3472.5 2675.83 re
f*
5 w
1 j
/DeviceGray {} CS
[1] SC
461.668 432.5 3472.502 2675.83 re
S
/DeviceGray {} CS
[0] SC
461.668 432.5 m
3934.17 432.5 l
S
461.668 3108.33 m
3934.17 3108.33 l
S
461.668 432.5 m
461.668 3108.33 l
S
3934.17 432.5 m
3934.17 3108.33 l
S
461.668 432.5 m
3934.17 432.5 l
S
461.668 432.5 m
461.668 3108.33 l
S
749.168 432.5 m
749.168 467.5 l
S
749.168 3108.33 m
749.168 3074.17 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 70.5 25.0832] Tm
0 0 Td
/F8_0 16 Tf
(0)
[8.896
0] Tj
Q
1304.17 432.5 m
1304.17 467.5 l
S
1304.17 3108.33 m
1304.17 3074.17 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 126 25.0832] Tm
0 0 Td
/F8_0 16 Tf
(2)
[8.896
0] Tj
Q
1859.17 432.5 m
1859.17 467.5 l
S
1859.17 3108.33 m
1859.17 3074.17 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 181.5 25.0832] Tm
0 0 Td
/F8_0 16 Tf
(4)
[8.896
0] Tj
Q
2414.17 432.5 m
2414.17 467.5 l
S
2414.17 3108.33 m
2414.17 3074.17 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 237 25.0832] Tm
0 0 Td
/F8_0 16 Tf
(6)
[8.896
0] Tj
Q
2969.17 432.5 m
2969.17 467.5 l
S
2969.17 3108.33 m
2969.17 3074.17 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 292.5 25.0832] Tm
0 0 Td
/F8_0 16 Tf
(8)
[8.896
0] Tj
Q
3524.17 432.5 m
3524.17 467.5 l
S
3524.17 3108.33 m
3524.17 3074.17 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 343.583 25.0832] Tm
0 0 Td
/F8_0 16 Tf
(10)
[8.896
0
8.896
0] Tj
0.666797 -25 Td
(x 10)
[8.896
0
4.448
0
8.896
0
8.896
0] Tj
31.749997 -14.75 Td
/F8_0 10.6667 Tf
(-19)
[6.229353
0
5.930685
0
5.930685
0] Tj
Q
461.668 654.168 m
496.668 654.168 l
S
3934.17 654.168 m
3899.17 654.168 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 34.5 59.3332] Tm
0 0 Td
/F8_0 16 Tf
(0)
[8.896
0] Tj
Q
461.668 1081.67 m
496.668 1081.67 l
S
3934.17 1081.67 m
3899.17 1081.67 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 34.5 102.083] Tm
0 0 Td
/F8_0 16 Tf
(2)
[8.896
0] Tj
Q
461.668 1509.17 m
496.668 1509.17 l
S
3934.17 1509.17 m
3899.17 1509.17 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 34.5 144.833] Tm
0 0 Td
/F8_0 16 Tf
(4)
[8.896
0] Tj
Q
461.668 1937.5 m
496.668 1937.5 l
S
3934.17 1937.5 m
3899.17 1937.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 34.5 187.667] Tm
0 0 Td
/F8_0 16 Tf
(6)
[8.896
0] Tj
Q
461.668 2365 m
496.668 2365 l
S
3934.17 2365 m
3899.17 2365 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 34.5 230.417] Tm
0 0 Td
/F8_0 16 Tf
(8)
[8.896
0] Tj
Q
461.668 2793.33 m
496.668 2793.33 l
S
3934.17 2793.33 m
3899.17 2793.33 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 25.5832 273.25] Tm
0 0 Td
/F8_0 16 Tf
(10)
[8.896
0
8.896
0] Tj
20.5836 42.0832 Td
(x 10)
[8.896
0
4.448
0
8.896
0
8.896
0] Tj
51.6668 52.3332 Td
/F8_0 10.6667 Tf
(-19)
[6.229353
0
5.930685
0
5.930685
0] Tj
Q
461.668 432.5 m
3934.17 432.5 l
S
461.668 3108.33 m
3934.17 3108.33 l
S
461.668 432.5 m
461.668 3108.33 l
S
3934.17 432.5 m
3934.17 3108.33 l
S
20 w
/DeviceRGB {} CS
[0 0 1] SC
816.668 708.332 m
880 645 l
S
880 708.332 m
816.668 645 l
S
867.5 725.832 m
930.832 662.5 l
S
930.832 725.832 m
867.5 662.5 l
S
948.332 756.668 m
1011.67 693.332 l
S
1011.67 756.668 m
948.332 693.332 l
S
1062.5 807.5 m
1125.83 744.168 l
S
1125.83 807.5 m
1062.5 744.168 l
S
1205.83 887.5 m
1269.17 824.168 l
S
1269.17 887.5 m
1205.83 824.168 l
S
1363.33 991.668 m
1426.67 928.332 l
S
1426.67 991.668 m
1363.33 928.332 l
S
1538.33 1100 m
1601.67 1036.67 l
S
1601.67 1100 m
1538.33 1036.67 l
S
1739.17 1206.67 m
1802.5 1143.33 l
S
1802.5 1206.67 m
1739.17 1143.33 l
S
1974.17 1315.83 m
2037.5 1252.5 l
S
2037.5 1315.83 m
1974.17 1252.5 l
S
2227.5 1431.67 m
2290.83 1368.33 l
S
2290.83 1431.67 m
2227.5 1368.33 l
S
2508.33 1570.83 m
2571.67 1507.5 l
S
2571.67 1570.83 m
2508.33 1507.5 l
S
2827.5 1734.17 m
2890.83 1670.83 l
S
2890.83 1734.17 m
2827.5 1670.83 l
S
3201.67 1935 m
3265 1871.67 l
S
3265 1935 m
3201.67 1871.67 l
S
3607.5 2162.5 m
3670.83 2099.17 l
S
3670.83 2162.5 m
3607.5 2099.17 l
S
3902.5 2355.83 m
3965.83 2292.5 l
S
3965.83 2355.83 m
3902.5 2292.5 l
S
q
461.668 431.668 3473.33 2676.66 re
W
10 w
/DeviceGray {} CS
[0] SC
749.168 432.5 m
749.168 3108.33 l
S
461.668 654.168 m
3934.17 654.168 l
S
[118.4 44.4] 0 d
20 w
461.668 432.5 m
3934.17 3108.33 l
S
Q
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 193.083 8.75] Tm
0 0 Td
/F8_0 16 Tf
(SI_D65)
[10.672
0
4.448
0
8.896
0
11.552
0
8.896
0
8.896
0] Tj
[0 1 -1 0 17.4168 150.417] Tm
0 0 Td
/F8_0 16 Tf
(SI_Tun)
[10.672
0
4.448
0
8.896
0
9.776
0
9.776
0
9.776
0] Tj
Q
q
461.668 431.668 3473.33 2676.66 re
W
10 w
/DeviceGray {} CS
[0] SC
749.168 432.5 m
749.168 3108.33 l
S
461.668 654.168 m
3934.17 654.168 l
S
[118.4 44.4] 0 d
20 w
461.668 432.5 m
3934.17 3108.33 l
S
Q
0 j
810 640.832 71.668 71.668 re
S
858.332 656.668 71.668 71.6641 re
S
931.668 685.832 71.6641 71.668 re
S
1028.33 733.332 71.668 71.668 re
S
1135 805 71.668 71.668 re
S
1215.83 891.668 71.668 71.6641 re
S
1250.83 964.168 71.668 71.6641 re
S
1235 1007.5 71.668 71.668 re
S
1180.83 1011.67 71.668 71.6641 re
S
1110.83 990 71.668 71.668 re
S
1037.5 950 71.668 71.668 re
S
966.668 901.668 71.6641 71.6641 re
S
901.668 845.832 71.6641 71.668 re
S
847.5 792.5 71.668 71.668 re
S
816.668 755.832 71.6641 71.668 re
S
810.832 640.832 71.668 71.668 re
S
860.832 657.5 71.668 71.668 re
S
936.668 687.5 71.6641 71.668 re
S
1040.83 736.668 71.668 71.6641 re
S
1162.5 810.832 71.668 71.668 re
S
1274.17 905.832 71.6641 71.668 re
S
1365 993.332 71.668 71.668 re
S
1435 1062.5 71.668 71.668 re
S
1487.5 1109.17 71.668 71.6641 re
S
1524.17 1140.83 71.6641 71.668 re
S
1544.17 1166.67 71.6641 71.6641 re
S
1542.5 1185 71.668 71.668 re
S
1519.17 1195.83 71.6641 71.668 re
S
1473.33 1193.33 71.668 71.668 re
S
1432.5 1183.33 71.668 71.668 re
S
810 640.832 71.668 71.668 re
S
858.332 656.668 71.668 71.6641 re
S
931.668 685.832 71.6641 71.668 re
S
1028.33 733.332 71.668 71.668 re
S
1135 805 71.668 71.668 re
S
1215.83 891.668 71.668 71.6641 re
S
1250.83 964.168 71.668 71.6641 re
S
1235 1007.5 71.668 71.668 re
S
1180.83 1011.67 71.668 71.6641 re
S
1110.83 990 71.668 71.668 re
S
1037.5 950 71.668 71.668 re
S
966.668 901.668 71.6641 71.6641 re
S
901.668 845.832 71.6641 71.668 re
S
847.5 792.5 71.668 71.668 re
S
816.668 755.832 71.6641 71.668 re
S
810.832 640.832 71.668 71.668 re
S
860.832 657.5 71.668 71.668 re
S
936.668 687.5 71.6641 71.668 re
S
1040.83 736.668 71.668 71.6641 re
S
1162.5 810.832 71.668 71.668 re
S
1274.17 905.832 71.6641 71.668 re
S
1365 993.332 71.668 71.668 re
S
1435 1062.5 71.668 71.668 re
S
1487.5 1109.17 71.668 71.6641 re
S
1524.17 1140.83 71.6641 71.668 re
S
1544.17 1166.67 71.6641 71.6641 re
S
1542.5 1185 71.668 71.668 re
S
1519.17 1195.83 71.6641 71.668 re
S
1473.33 1193.33 71.668 71.668 re
S
1432.5 1183.33 71.668 71.668 re
S
810.832 640.832 71.668 71.668 re
S
860.832 657.5 71.668 71.668 re
S
936.668 687.5 71.6641 71.668 re
S
1040.83 736.668 71.668 71.6641 re
S
1162.5 810.832 71.668 71.668 re
S
1274.17 905.832 71.6641 71.668 re
S
1365 993.332 71.668 71.668 re
S
1435 1062.5 71.668 71.668 re
S
1487.5 1109.17 71.668 71.6641 re
S
1524.17 1140.83 71.6641 71.668 re
S
1544.17 1166.67 71.6641 71.6641 re
S
1542.5 1185 71.668 71.668 re
S
1519.17 1195.83 71.6641 71.668 re
S
1473.33 1193.33 71.668 71.668 re
S
1432.5 1183.33 71.668 71.668 re
S
810 640.832 71.668 71.668 re
S
858.332 656.668 71.668 71.6641 re
S
931.668 685.832 71.6641 71.668 re
S
1028.33 733.332 71.668 71.668 re
S
1135 805 71.668 71.668 re
S
1215.83 891.668 71.668 71.6641 re
S
1250.83 964.168 71.668 71.6641 re
S
1235 1007.5 71.668 71.668 re
S
1180.83 1011.67 71.668 71.6641 re
S
1110.83 990 71.668 71.668 re
S
1037.5 950 71.668 71.668 re
S
966.668 901.668 71.6641 71.6641 re
S
901.668 845.832 71.6641 71.668 re
S
847.5 792.5 71.668 71.668 re
S
816.668 755.832 71.6641 71.668 re
S
810.832 640.832 71.668 71.668 re
S
860.832 657.5 71.668 71.668 re
S
936.668 687.5 71.6641 71.668 re
S
1040.83 736.668 71.668 71.6641 re
S
1162.5 810.832 71.668 71.668 re
S
1274.17 905.832 71.6641 71.668 re
S
1365 993.332 71.668 71.668 re
S
1435 1062.5 71.668 71.668 re
S
1487.5 1109.17 71.668 71.6641 re
S
1524.17 1140.83 71.6641 71.668 re
S
1544.17 1166.67 71.6641 71.6641 re
S
1542.5 1185 71.668 71.668 re
S
1519.17 1195.83 71.6641 71.668 re
S
1473.33 1193.33 71.668 71.668 re
S
1432.5 1183.33 71.668 71.668 re
S
810 640.832 71.668 71.668 re
S
858.332 656.668 71.668 71.6641 re
S
931.668 685.832 71.6641 71.668 re
S
1028.33 733.332 71.668 71.668 re
S
1135 805 71.668 71.668 re
S
1215.83 891.668 71.668 71.6641 re
S
1250.83 964.168 71.668 71.6641 re
S
1235 1007.5 71.668 71.668 re
S
1180.83 1011.67 71.668 71.6641 re
S
1110.83 990 71.668 71.668 re
S
1037.5 950 71.668 71.668 re
S
966.668 901.668 71.6641 71.6641 re
S
901.668 845.832 71.6641 71.668 re
S
847.5 792.5 71.668 71.668 re
S
816.668 755.832 71.6641 71.668 re
S
q
461.668 431.668 3473.33 2676.66 re
W
10 w
/DeviceGray {} CS
[0] SC
749.168 432.5 m
749.168 3108.33 l
S
461.668 654.168 m
3934.17 654.168 l
S
[118.4 44.4] 0 d
20 w
461.668 432.5 m
3934.17 3108.33 l
S
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font BIKHZR+Helvetica-Bold
%%EOF
